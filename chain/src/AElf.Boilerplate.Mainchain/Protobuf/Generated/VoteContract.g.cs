// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vote_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.Vote {

  /// <summary>Holder for reflection information generated from vote_contract.proto</summary>
  internal static partial class VoteContractReflection {

    #region Descriptor
    /// <summary>File descriptor for vote_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VoteContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN2b3RlX2NvbnRyYWN0LnByb3RvEgR2b3RlGgphY3MxLnByb3RvGg9hZWxm",
            "L2NvcmUucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i",
            "3wEKE1ZvdGluZ1JlZ2lzdGVySW5wdXQSMwoPc3RhcnRfdGltZXN0YW1wGAEg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIxCg1lbmRfdGltZXN0",
            "YW1wGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIZChFhY2Nl",
            "cHRlZF9jdXJyZW5jeRgDIAEoCRIVCg1pc19sb2NrX3Rva2VuGAQgASgIEh0K",
            "FXRvdGFsX3NuYXBzaG90X251bWJlchgFIAEoEhIPCgdvcHRpb25zGAYgAygJ",
            "IrkDCgpWb3RpbmdJdGVtEiIKDnZvdGluZ19pdGVtX2lkGAEgASgLMgouYWVs",
            "Zi5IYXNoEhkKEWFjY2VwdGVkX2N1cnJlbmN5GAIgASgJEhUKDWlzX2xvY2tf",
            "dG9rZW4YAyABKAgSHwoXY3VycmVudF9zbmFwc2hvdF9udW1iZXIYBCABKBIS",
            "HQoVdG90YWxfc25hcHNob3RfbnVtYmVyGAUgASgSEg8KB29wdGlvbnMYBiAD",
            "KAkSNgoScmVnaXN0ZXJfdGltZXN0YW1wGAcgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBIzCg9zdGFydF90aW1lc3RhbXAYCCABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEjEKDWVuZF90aW1lc3RhbXAYCSABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEkQKIGN1cnJlbnRfc25hcHNo",
            "b3Rfc3RhcnRfdGltZXN0YW1wGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIeCgdzcG9uc29yGAsgASgLMg0uYWVsZi5BZGRyZXNzIqQBCglW",
            "b3RlSW5wdXQSIgoOdm90aW5nX2l0ZW1faWQYASABKAsyCi5hZWxmLkhhc2gS",
            "HAoFdm90ZXIYAiABKAsyDS5hZWxmLkFkZHJlc3MSDgoGYW1vdW50GAMgASgS",
            "Eg4KBm9wdGlvbhgEIAEoCRIbCgd2b3RlX2lkGAUgASgLMgouYWVsZi5IYXNo",
            "EhgKEGlzX2NoYW5nZV90YXJnZXQYBiABKAgiLAoNV2l0aGRyYXdJbnB1dBIb",
            "Cgd2b3RlX2lkGAEgASgLMgouYWVsZi5IYXNoIlMKFEdldFZvdGluZ1Jlc3Vs",
            "dElucHV0EiIKDnZvdGluZ19pdGVtX2lkGAEgASgLMgouYWVsZi5IYXNoEhcK",
            "D3NuYXBzaG90X251bWJlchgCIAEoEiLTAgoMVm90aW5nUmVzdWx0EiIKDnZv",
            "dGluZ19pdGVtX2lkGAEgASgLMgouYWVsZi5IYXNoEjAKB3Jlc3VsdHMYAiAD",
            "KAsyHy52b3RlLlZvdGluZ1Jlc3VsdC5SZXN1bHRzRW50cnkSFwoPc25hcHNo",
            "b3RfbnVtYmVyGAMgASgSEhQKDHZvdGVyc19jb3VudBgEIAEoEhI8ChhzbmFw",
            "c2hvdF9zdGFydF90aW1lc3RhbXAYBSABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEjoKFnNuYXBzaG90X2VuZF90aW1lc3RhbXAYBiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEhQKDHZvdGVzX2Ftb3VudBgHIAEo",
            "EhouCgxSZXN1bHRzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgS",
            "OgI4ASJQChFUYWtlU25hcHNob3RJbnB1dBIiCg52b3RpbmdfaXRlbV9pZBgB",
            "IAEoCzIKLmFlbGYuSGFzaBIXCg9zbmFwc2hvdF9udW1iZXIYAiABKBIipQIK",
            "DFZvdGluZ1JlY29yZBIiCg52b3RpbmdfaXRlbV9pZBgBIAEoCzIKLmFlbGYu",
            "SGFzaBIcCgV2b3RlchgCIAEoCzINLmFlbGYuQWRkcmVzcxIXCg9zbmFwc2hv",
            "dF9udW1iZXIYAyABKBISDgoGYW1vdW50GAQgASgSEjYKEndpdGhkcmF3X3Rp",
            "bWVzdGFtcBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMgoO",
            "dm90ZV90aW1lc3RhbXAYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEhQKDGlzX3dpdGhkcmF3bhgHIAEoCBIOCgZvcHRpb24YCCABKAkSGAoQ",
            "aXNfY2hhbmdlX3RhcmdldBgJIAEoCCJECg5BZGRPcHRpb25JbnB1dBIiCg52",
            "b3RpbmdfaXRlbV9pZBgBIAEoCzIKLmFlbGYuSGFzaBIOCgZvcHRpb24YAiAB",
            "KAkiRwoRUmVtb3ZlT3B0aW9uSW5wdXQSIgoOdm90aW5nX2l0ZW1faWQYASAB",
            "KAsyCi5hZWxmLkhhc2gSDgoGb3B0aW9uGAIgASgJIkYKD0FkZE9wdGlvbnNJ",
            "bnB1dBIiCg52b3RpbmdfaXRlbV9pZBgBIAEoCzIKLmFlbGYuSGFzaBIPCgdv",
            "cHRpb25zGAIgAygJIkkKElJlbW92ZU9wdGlvbnNJbnB1dBIiCg52b3Rpbmdf",
            "aXRlbV9pZBgBIAEoCzIKLmFlbGYuSGFzaBIPCgdvcHRpb25zGAIgAygJIpoB",
            "CgpWb3RlZEl0ZW1zEkMKE3ZvdGVkX2l0ZW1fdm90ZV9pZHMYASADKAsyJi52",
            "b3RlLlZvdGVkSXRlbXMuVm90ZWRJdGVtVm90ZUlkc0VudHJ5GkcKFVZvdGVk",
            "SXRlbVZvdGVJZHNFbnRyeRILCgNrZXkYASABKAkSHQoFdmFsdWUYAiABKAsy",
            "Di52b3RlLlZvdGVkSWRzOgI4ASJRCghWb3RlZElkcxIgCgxhY3RpdmVfdm90",
            "ZXMYASADKAsyCi5hZWxmLkhhc2gSIwoPd2l0aGRyYXduX3ZvdGVzGAIgAygL",
            "MgouYWVsZi5IYXNoIlUKEUdldFZvdGluZ0lkc0lucHV0EhwKBXZvdGVyGAEg",
            "ASgLMg0uYWVsZi5BZGRyZXNzEiIKDnZvdGluZ19pdGVtX2lkGAIgASgLMgou",
            "YWVsZi5IYXNoIjgKEkdldFZvdGluZ0l0ZW1JbnB1dBIiCg52b3RpbmdfaXRl",
            "bV9pZBgBIAEoCzIKLmFlbGYuSGFzaCIwChVHZXRWb3RpbmdSZWNvcmRzSW5w",
            "dXQSFwoDaWRzGAEgAygLMgouYWVsZi5IYXNoIjQKDVZvdGluZ1JlY29yZHMS",
            "IwoHcmVjb3JkcxgBIAMoCzISLnZvdGUuVm90aW5nUmVjb3JkItkBCgVWb3Rl",
            "ZBIiCg52b3RpbmdfaXRlbV9pZBgBIAEoCzIKLmFlbGYuSGFzaBIcCgV2b3Rl",
            "chgCIAEoCzINLmFlbGYuQWRkcmVzcxIXCg9zbmFwc2hvdF9udW1iZXIYAyAB",
            "KBISDgoGYW1vdW50GAQgASgSEjIKDnZvdGVfdGltZXN0YW1wGAUgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZvcHRpb24YBiABKAkSGwoH",
            "dm90ZV9pZBgHIAEoCzIKLmFlbGYuSGFzaDoEoLsYASIuCglXaXRoZHJhd24S",
            "GwoHdm90ZV9pZBgBIAEoCzIKLmFlbGYuSGFzaDoEoLsYASK4AwoUVm90aW5n",
            "SXRlbVJlZ2lzdGVyZWQSIgoOdm90aW5nX2l0ZW1faWQYASABKAsyCi5hZWxm",
            "Lkhhc2gSGQoRYWNjZXB0ZWRfY3VycmVuY3kYAiABKAkSFQoNaXNfbG9ja190",
            "b2tlbhgDIAEoCBIfChdjdXJyZW50X3NuYXBzaG90X251bWJlchgEIAEoEhId",
            "ChV0b3RhbF9zbmFwc2hvdF9udW1iZXIYBSABKBISNgoScmVnaXN0ZXJfdGlt",
            "ZXN0YW1wGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIzCg9z",
            "dGFydF90aW1lc3RhbXAYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEjEKDWVuZF90aW1lc3RhbXAYCCABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEkQKIGN1cnJlbnRfc25hcHNob3Rfc3RhcnRfdGltZXN0YW1w",
            "GAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIeCgdzcG9uc29y",
            "GAogASgLMg0uYWVsZi5BZGRyZXNzOgSguxgBMo0ICgxWb3RlQ29udHJhY3QS",
            "PwoIUmVnaXN0ZXISGS52b3RlLlZvdGluZ1JlZ2lzdGVySW5wdXQaFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkiABIxCgRWb3RlEg8udm90ZS5Wb3RlSW5wdXQa",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI5CghXaXRoZHJhdxITLnZvdGUu",
            "V2l0aGRyYXdJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkEKDFRh",
            "a2VTbmFwc2hvdBIXLnZvdGUuVGFrZVNuYXBzaG90SW5wdXQaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkiABI7CglBZGRPcHRpb24SFC52b3RlLkFkZE9wdGlv",
            "bklucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASQQoMUmVtb3ZlT3B0",
            "aW9uEhcudm90ZS5SZW1vdmVPcHRpb25JbnB1dBoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eSIAEj0KCkFkZE9wdGlvbnMSFS52b3RlLkFkZE9wdGlvbnNJbnB1",
            "dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkMKDVJlbW92ZU9wdGlvbnMS",
            "GC52b3RlLlJlbW92ZU9wdGlvbnNJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIAEkIKDUdldFZvdGluZ0l0ZW0SGC52b3RlLkdldFZvdGluZ0l0ZW1J",
            "bnB1dBoQLnZvdGUuVm90aW5nSXRlbSIFiIn3AQESSAoPR2V0Vm90aW5nUmVz",
            "dWx0Ehoudm90ZS5HZXRWb3RpbmdSZXN1bHRJbnB1dBoSLnZvdGUuVm90aW5n",
            "UmVzdWx0IgWIifcBARI+ChVHZXRMYXRlc3RWb3RpbmdSZXN1bHQSCi5hZWxm",
            "Lkhhc2gaEi52b3RlLlZvdGluZ1Jlc3VsdCIFiIn3AQESOAoPR2V0Vm90aW5n",
            "UmVjb3JkEgouYWVsZi5IYXNoGhIudm90ZS5Wb3RpbmdSZWNvcmQiBYiJ9wEB",
            "EksKEEdldFZvdGluZ1JlY29yZHMSGy52b3RlLkdldFZvdGluZ1JlY29yZHNJ",
            "bnB1dBoTLnZvdGUuVm90aW5nUmVjb3JkcyIFiIn3AQESNwoNR2V0Vm90ZWRJ",
            "dGVtcxINLmFlbGYuQWRkcmVzcxoQLnZvdGUuVm90ZWRJdGVtcyIFiIn3AQES",
            "PgoMR2V0Vm90aW5nSWRzEhcudm90ZS5HZXRWb3RpbmdJZHNJbnB1dBoOLnZv",
            "dGUuVm90ZWRJZHMiBYiJ9wEBGjmyzPYBJUFFbGYuQ29udHJhY3RzLlZvdGUu",
            "Vm90ZUNvbnRyYWN0U3RhdGXKyvYBCmFjczEucHJvdG9CFqoCE0FFbGYuQ29u",
            "dHJhY3RzLlZvdGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Acs1.Acs1Reflection.Descriptor, global::AElf.Types.CoreReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotingRegisterInput), global::AElf.Contracts.Vote.VotingRegisterInput.Parser, new[]{ "StartTimestamp", "EndTimestamp", "AcceptedCurrency", "IsLockToken", "TotalSnapshotNumber", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotingItem), global::AElf.Contracts.Vote.VotingItem.Parser, new[]{ "VotingItemId", "AcceptedCurrency", "IsLockToken", "CurrentSnapshotNumber", "TotalSnapshotNumber", "Options", "RegisterTimestamp", "StartTimestamp", "EndTimestamp", "CurrentSnapshotStartTimestamp", "Sponsor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VoteInput), global::AElf.Contracts.Vote.VoteInput.Parser, new[]{ "VotingItemId", "Voter", "Amount", "Option", "VoteId", "IsChangeTarget" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.WithdrawInput), global::AElf.Contracts.Vote.WithdrawInput.Parser, new[]{ "VoteId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.GetVotingResultInput), global::AElf.Contracts.Vote.GetVotingResultInput.Parser, new[]{ "VotingItemId", "SnapshotNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotingResult), global::AElf.Contracts.Vote.VotingResult.Parser, new[]{ "VotingItemId", "Results", "SnapshotNumber", "VotersCount", "SnapshotStartTimestamp", "SnapshotEndTimestamp", "VotesAmount" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.TakeSnapshotInput), global::AElf.Contracts.Vote.TakeSnapshotInput.Parser, new[]{ "VotingItemId", "SnapshotNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotingRecord), global::AElf.Contracts.Vote.VotingRecord.Parser, new[]{ "VotingItemId", "Voter", "SnapshotNumber", "Amount", "WithdrawTimestamp", "VoteTimestamp", "IsWithdrawn", "Option", "IsChangeTarget" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.AddOptionInput), global::AElf.Contracts.Vote.AddOptionInput.Parser, new[]{ "VotingItemId", "Option" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.RemoveOptionInput), global::AElf.Contracts.Vote.RemoveOptionInput.Parser, new[]{ "VotingItemId", "Option" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.AddOptionsInput), global::AElf.Contracts.Vote.AddOptionsInput.Parser, new[]{ "VotingItemId", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.RemoveOptionsInput), global::AElf.Contracts.Vote.RemoveOptionsInput.Parser, new[]{ "VotingItemId", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotedItems), global::AElf.Contracts.Vote.VotedItems.Parser, new[]{ "VotedItemVoteIds" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotedIds), global::AElf.Contracts.Vote.VotedIds.Parser, new[]{ "ActiveVotes", "WithdrawnVotes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.GetVotingIdsInput), global::AElf.Contracts.Vote.GetVotingIdsInput.Parser, new[]{ "Voter", "VotingItemId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.GetVotingItemInput), global::AElf.Contracts.Vote.GetVotingItemInput.Parser, new[]{ "VotingItemId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.GetVotingRecordsInput), global::AElf.Contracts.Vote.GetVotingRecordsInput.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotingRecords), global::AElf.Contracts.Vote.VotingRecords.Parser, new[]{ "Records" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.Voted), global::AElf.Contracts.Vote.Voted.Parser, new[]{ "VotingItemId", "Voter", "SnapshotNumber", "Amount", "VoteTimestamp", "Option", "VoteId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.Withdrawn), global::AElf.Contracts.Vote.Withdrawn.Parser, new[]{ "VoteId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Vote.VotingItemRegistered), global::AElf.Contracts.Vote.VotingItemRegistered.Parser, new[]{ "VotingItemId", "AcceptedCurrency", "IsLockToken", "CurrentSnapshotNumber", "TotalSnapshotNumber", "RegisterTimestamp", "StartTimestamp", "EndTimestamp", "CurrentSnapshotStartTimestamp", "Sponsor" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Messages
  /// </summary>
  internal sealed partial class VotingRegisterInput : pb::IMessage<VotingRegisterInput> {
    private static readonly pb::MessageParser<VotingRegisterInput> _parser = new pb::MessageParser<VotingRegisterInput>(() => new VotingRegisterInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingRegisterInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRegisterInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRegisterInput(VotingRegisterInput other) : this() {
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      endTimestamp_ = other.endTimestamp_ != null ? other.endTimestamp_.Clone() : null;
      acceptedCurrency_ = other.acceptedCurrency_;
      isLockToken_ = other.isLockToken_;
      totalSnapshotNumber_ = other.totalSnapshotNumber_;
      options_ = other.options_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRegisterInput Clone() {
      return new VotingRegisterInput(this);
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp" field.</summary>
    public const int EndTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "accepted_currency" field.</summary>
    public const int AcceptedCurrencyFieldNumber = 3;
    private string acceptedCurrency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceptedCurrency {
      get { return acceptedCurrency_; }
      set {
        acceptedCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_lock_token" field.</summary>
    public const int IsLockTokenFieldNumber = 4;
    private bool isLockToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLockToken {
      get { return isLockToken_; }
      set {
        isLockToken_ = value;
      }
    }

    /// <summary>Field number for the "total_snapshot_number" field.</summary>
    public const int TotalSnapshotNumberFieldNumber = 5;
    private long totalSnapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSnapshotNumber {
      get { return totalSnapshotNumber_; }
      set {
        totalSnapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingRegisterInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingRegisterInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (!object.Equals(EndTimestamp, other.EndTimestamp)) return false;
      if (AcceptedCurrency != other.AcceptedCurrency) return false;
      if (IsLockToken != other.IsLockToken) return false;
      if (TotalSnapshotNumber != other.TotalSnapshotNumber) return false;
      if(!options_.Equals(other.options_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (endTimestamp_ != null) hash ^= EndTimestamp.GetHashCode();
      if (AcceptedCurrency.Length != 0) hash ^= AcceptedCurrency.GetHashCode();
      if (IsLockToken != false) hash ^= IsLockToken.GetHashCode();
      if (TotalSnapshotNumber != 0L) hash ^= TotalSnapshotNumber.GetHashCode();
      hash ^= options_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (startTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTimestamp);
      }
      if (AcceptedCurrency.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AcceptedCurrency);
      }
      if (IsLockToken != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsLockToken);
      }
      if (TotalSnapshotNumber != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(TotalSnapshotNumber);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimestamp);
      }
      if (AcceptedCurrency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceptedCurrency);
      }
      if (IsLockToken != false) {
        size += 1 + 1;
      }
      if (TotalSnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TotalSnapshotNumber);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingRegisterInput other) {
      if (other == null) {
        return;
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.endTimestamp_ != null) {
        if (endTimestamp_ == null) {
          EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTimestamp.MergeFrom(other.EndTimestamp);
      }
      if (other.AcceptedCurrency.Length != 0) {
        AcceptedCurrency = other.AcceptedCurrency;
      }
      if (other.IsLockToken != false) {
        IsLockToken = other.IsLockToken;
      }
      if (other.TotalSnapshotNumber != 0L) {
        TotalSnapshotNumber = other.TotalSnapshotNumber;
      }
      options_.Add(other.options_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 18: {
            if (endTimestamp_ == null) {
              EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTimestamp);
            break;
          }
          case 26: {
            AcceptedCurrency = input.ReadString();
            break;
          }
          case 32: {
            IsLockToken = input.ReadBool();
            break;
          }
          case 40: {
            TotalSnapshotNumber = input.ReadSInt64();
            break;
          }
          case 50: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VotingItem : pb::IMessage<VotingItem> {
    private static readonly pb::MessageParser<VotingItem> _parser = new pb::MessageParser<VotingItem>(() => new VotingItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingItem(VotingItem other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      acceptedCurrency_ = other.acceptedCurrency_;
      isLockToken_ = other.isLockToken_;
      currentSnapshotNumber_ = other.currentSnapshotNumber_;
      totalSnapshotNumber_ = other.totalSnapshotNumber_;
      options_ = other.options_.Clone();
      registerTimestamp_ = other.registerTimestamp_ != null ? other.registerTimestamp_.Clone() : null;
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      endTimestamp_ = other.endTimestamp_ != null ? other.endTimestamp_.Clone() : null;
      currentSnapshotStartTimestamp_ = other.currentSnapshotStartTimestamp_ != null ? other.currentSnapshotStartTimestamp_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingItem Clone() {
      return new VotingItem(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "accepted_currency" field.</summary>
    public const int AcceptedCurrencyFieldNumber = 2;
    private string acceptedCurrency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceptedCurrency {
      get { return acceptedCurrency_; }
      set {
        acceptedCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_lock_token" field.</summary>
    public const int IsLockTokenFieldNumber = 3;
    private bool isLockToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLockToken {
      get { return isLockToken_; }
      set {
        isLockToken_ = value;
      }
    }

    /// <summary>Field number for the "current_snapshot_number" field.</summary>
    public const int CurrentSnapshotNumberFieldNumber = 4;
    private long currentSnapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentSnapshotNumber {
      get { return currentSnapshotNumber_; }
      set {
        currentSnapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "total_snapshot_number" field.</summary>
    public const int TotalSnapshotNumberFieldNumber = 5;
    private long totalSnapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSnapshotNumber {
      get { return totalSnapshotNumber_; }
      set {
        totalSnapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    /// <summary>Field number for the "register_timestamp" field.</summary>
    public const int RegisterTimestampFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp registerTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RegisterTimestamp {
      get { return registerTimestamp_; }
      set {
        registerTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp" field.</summary>
    public const int EndTimestampFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "current_snapshot_start_timestamp" field.</summary>
    public const int CurrentSnapshotStartTimestampFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentSnapshotStartTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentSnapshotStartTimestamp {
      get { return currentSnapshotStartTimestamp_; }
      set {
        currentSnapshotStartTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 11;
    private global::AElf.Types.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (AcceptedCurrency != other.AcceptedCurrency) return false;
      if (IsLockToken != other.IsLockToken) return false;
      if (CurrentSnapshotNumber != other.CurrentSnapshotNumber) return false;
      if (TotalSnapshotNumber != other.TotalSnapshotNumber) return false;
      if(!options_.Equals(other.options_)) return false;
      if (!object.Equals(RegisterTimestamp, other.RegisterTimestamp)) return false;
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (!object.Equals(EndTimestamp, other.EndTimestamp)) return false;
      if (!object.Equals(CurrentSnapshotStartTimestamp, other.CurrentSnapshotStartTimestamp)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (AcceptedCurrency.Length != 0) hash ^= AcceptedCurrency.GetHashCode();
      if (IsLockToken != false) hash ^= IsLockToken.GetHashCode();
      if (CurrentSnapshotNumber != 0L) hash ^= CurrentSnapshotNumber.GetHashCode();
      if (TotalSnapshotNumber != 0L) hash ^= TotalSnapshotNumber.GetHashCode();
      hash ^= options_.GetHashCode();
      if (registerTimestamp_ != null) hash ^= RegisterTimestamp.GetHashCode();
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (endTimestamp_ != null) hash ^= EndTimestamp.GetHashCode();
      if (currentSnapshotStartTimestamp_ != null) hash ^= CurrentSnapshotStartTimestamp.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (AcceptedCurrency.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AcceptedCurrency);
      }
      if (IsLockToken != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsLockToken);
      }
      if (CurrentSnapshotNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(CurrentSnapshotNumber);
      }
      if (TotalSnapshotNumber != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(TotalSnapshotNumber);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (registerTimestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RegisterTimestamp);
      }
      if (startTimestamp_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EndTimestamp);
      }
      if (currentSnapshotStartTimestamp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CurrentSnapshotStartTimestamp);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Sponsor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (AcceptedCurrency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceptedCurrency);
      }
      if (IsLockToken != false) {
        size += 1 + 1;
      }
      if (CurrentSnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CurrentSnapshotNumber);
      }
      if (TotalSnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TotalSnapshotNumber);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (registerTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterTimestamp);
      }
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimestamp);
      }
      if (currentSnapshotStartTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentSnapshotStartTimestamp);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingItem other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.AcceptedCurrency.Length != 0) {
        AcceptedCurrency = other.AcceptedCurrency;
      }
      if (other.IsLockToken != false) {
        IsLockToken = other.IsLockToken;
      }
      if (other.CurrentSnapshotNumber != 0L) {
        CurrentSnapshotNumber = other.CurrentSnapshotNumber;
      }
      if (other.TotalSnapshotNumber != 0L) {
        TotalSnapshotNumber = other.TotalSnapshotNumber;
      }
      options_.Add(other.options_);
      if (other.registerTimestamp_ != null) {
        if (registerTimestamp_ == null) {
          RegisterTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RegisterTimestamp.MergeFrom(other.RegisterTimestamp);
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.endTimestamp_ != null) {
        if (endTimestamp_ == null) {
          EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTimestamp.MergeFrom(other.EndTimestamp);
      }
      if (other.currentSnapshotStartTimestamp_ != null) {
        if (currentSnapshotStartTimestamp_ == null) {
          CurrentSnapshotStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentSnapshotStartTimestamp.MergeFrom(other.CurrentSnapshotStartTimestamp);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Types.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            AcceptedCurrency = input.ReadString();
            break;
          }
          case 24: {
            IsLockToken = input.ReadBool();
            break;
          }
          case 32: {
            CurrentSnapshotNumber = input.ReadSInt64();
            break;
          }
          case 40: {
            TotalSnapshotNumber = input.ReadSInt64();
            break;
          }
          case 50: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
          case 58: {
            if (registerTimestamp_ == null) {
              RegisterTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RegisterTimestamp);
            break;
          }
          case 66: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 74: {
            if (endTimestamp_ == null) {
              EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTimestamp);
            break;
          }
          case 82: {
            if (currentSnapshotStartTimestamp_ == null) {
              CurrentSnapshotStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentSnapshotStartTimestamp);
            break;
          }
          case 90: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Types.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VoteInput : pb::IMessage<VoteInput> {
    private static readonly pb::MessageParser<VoteInput> _parser = new pb::MessageParser<VoteInput>(() => new VoteInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInput(VoteInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      amount_ = other.amount_;
      option_ = other.option_;
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      isChangeTarget_ = other.isChangeTarget_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteInput Clone() {
      return new VoteInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 2;
    private global::AElf.Types.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 4;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 5;
    private global::AElf.Types.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    /// <summary>Field number for the "is_change_target" field.</summary>
    public const int IsChangeTargetFieldNumber = 6;
    private bool isChangeTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChangeTarget {
      get { return isChangeTarget_; }
      set {
        isChangeTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (!object.Equals(Voter, other.Voter)) return false;
      if (Amount != other.Amount) return false;
      if (Option != other.Option) return false;
      if (!object.Equals(VoteId, other.VoteId)) return false;
      if (IsChangeTarget != other.IsChangeTarget) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (IsChangeTarget != false) hash ^= IsChangeTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (voter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Voter);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(Amount);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Option);
      }
      if (voteId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VoteId);
      }
      if (IsChangeTarget != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsChangeTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Amount);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (IsChangeTarget != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Types.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Types.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      if (other.IsChangeTarget != false) {
        IsChangeTarget = other.IsChangeTarget;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            if (voter_ == null) {
              Voter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 24: {
            Amount = input.ReadSInt64();
            break;
          }
          case 34: {
            Option = input.ReadString();
            break;
          }
          case 42: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
          case 48: {
            IsChangeTarget = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class WithdrawInput : pb::IMessage<WithdrawInput> {
    private static readonly pb::MessageParser<WithdrawInput> _parser = new pb::MessageParser<WithdrawInput>(() => new WithdrawInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WithdrawInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawInput(WithdrawInput other) : this() {
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawInput Clone() {
      return new WithdrawInput(this);
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 1;
    private global::AElf.Types.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WithdrawInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WithdrawInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoteId, other.VoteId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voteId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoteId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WithdrawInput other) {
      if (other == null) {
        return;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Types.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetVotingResultInput : pb::IMessage<GetVotingResultInput> {
    private static readonly pb::MessageParser<GetVotingResultInput> _parser = new pb::MessageParser<GetVotingResultInput>(() => new GetVotingResultInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingResultInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingResultInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingResultInput(GetVotingResultInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      snapshotNumber_ = other.snapshotNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingResultInput Clone() {
      return new GetVotingResultInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_number" field.</summary>
    public const int SnapshotNumberFieldNumber = 2;
    private long snapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SnapshotNumber {
      get { return snapshotNumber_; }
      set {
        snapshotNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingResultInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingResultInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (SnapshotNumber != other.SnapshotNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (SnapshotNumber != 0L) hash ^= SnapshotNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (SnapshotNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(SnapshotNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (SnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(SnapshotNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingResultInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.SnapshotNumber != 0L) {
        SnapshotNumber = other.SnapshotNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 16: {
            SnapshotNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VotingResult : pb::IMessage<VotingResult> {
    private static readonly pb::MessageParser<VotingResult> _parser = new pb::MessageParser<VotingResult>(() => new VotingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingResult(VotingResult other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      results_ = other.results_.Clone();
      snapshotNumber_ = other.snapshotNumber_;
      votersCount_ = other.votersCount_;
      snapshotStartTimestamp_ = other.snapshotStartTimestamp_ != null ? other.snapshotStartTimestamp_.Clone() : null;
      snapshotEndTimestamp_ = other.snapshotEndTimestamp_ != null ? other.snapshotEndTimestamp_.Clone() : null;
      votesAmount_ = other.votesAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingResult Clone() {
      return new VotingResult(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pbc::MapField<string, long>.Codec _map_results_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForSInt64(16), 18);
    private readonly pbc::MapField<string, long> results_ = new pbc::MapField<string, long>();
    /// <summary>
    /// option -> amount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "snapshot_number" field.</summary>
    public const int SnapshotNumberFieldNumber = 3;
    private long snapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SnapshotNumber {
      get { return snapshotNumber_; }
      set {
        snapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "voters_count" field.</summary>
    public const int VotersCountFieldNumber = 4;
    private long votersCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VotersCount {
      get { return votersCount_; }
      set {
        votersCount_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_start_timestamp" field.</summary>
    public const int SnapshotStartTimestampFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp snapshotStartTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SnapshotStartTimestamp {
      get { return snapshotStartTimestamp_; }
      set {
        snapshotStartTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_end_timestamp" field.</summary>
    public const int SnapshotEndTimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp snapshotEndTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SnapshotEndTimestamp {
      get { return snapshotEndTimestamp_; }
      set {
        snapshotEndTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "votes_amount" field.</summary>
    public const int VotesAmountFieldNumber = 7;
    private long votesAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VotesAmount {
      get { return votesAmount_; }
      set {
        votesAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (!Results.Equals(other.Results)) return false;
      if (SnapshotNumber != other.SnapshotNumber) return false;
      if (VotersCount != other.VotersCount) return false;
      if (!object.Equals(SnapshotStartTimestamp, other.SnapshotStartTimestamp)) return false;
      if (!object.Equals(SnapshotEndTimestamp, other.SnapshotEndTimestamp)) return false;
      if (VotesAmount != other.VotesAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      hash ^= Results.GetHashCode();
      if (SnapshotNumber != 0L) hash ^= SnapshotNumber.GetHashCode();
      if (VotersCount != 0L) hash ^= VotersCount.GetHashCode();
      if (snapshotStartTimestamp_ != null) hash ^= SnapshotStartTimestamp.GetHashCode();
      if (snapshotEndTimestamp_ != null) hash ^= SnapshotEndTimestamp.GetHashCode();
      if (VotesAmount != 0L) hash ^= VotesAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      results_.WriteTo(output, _map_results_codec);
      if (SnapshotNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(SnapshotNumber);
      }
      if (VotersCount != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(VotersCount);
      }
      if (snapshotStartTimestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SnapshotStartTimestamp);
      }
      if (snapshotEndTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SnapshotEndTimestamp);
      }
      if (VotesAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(VotesAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (SnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(SnapshotNumber);
      }
      if (VotersCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(VotersCount);
      }
      if (snapshotStartTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SnapshotStartTimestamp);
      }
      if (snapshotEndTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SnapshotEndTimestamp);
      }
      if (VotesAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(VotesAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingResult other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      results_.Add(other.results_);
      if (other.SnapshotNumber != 0L) {
        SnapshotNumber = other.SnapshotNumber;
      }
      if (other.VotersCount != 0L) {
        VotersCount = other.VotersCount;
      }
      if (other.snapshotStartTimestamp_ != null) {
        if (snapshotStartTimestamp_ == null) {
          SnapshotStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SnapshotStartTimestamp.MergeFrom(other.SnapshotStartTimestamp);
      }
      if (other.snapshotEndTimestamp_ != null) {
        if (snapshotEndTimestamp_ == null) {
          SnapshotEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SnapshotEndTimestamp.MergeFrom(other.SnapshotEndTimestamp);
      }
      if (other.VotesAmount != 0L) {
        VotesAmount = other.VotesAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 24: {
            SnapshotNumber = input.ReadSInt64();
            break;
          }
          case 32: {
            VotersCount = input.ReadSInt64();
            break;
          }
          case 42: {
            if (snapshotStartTimestamp_ == null) {
              SnapshotStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SnapshotStartTimestamp);
            break;
          }
          case 50: {
            if (snapshotEndTimestamp_ == null) {
              SnapshotEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SnapshotEndTimestamp);
            break;
          }
          case 56: {
            VotesAmount = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TakeSnapshotInput : pb::IMessage<TakeSnapshotInput> {
    private static readonly pb::MessageParser<TakeSnapshotInput> _parser = new pb::MessageParser<TakeSnapshotInput>(() => new TakeSnapshotInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TakeSnapshotInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakeSnapshotInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakeSnapshotInput(TakeSnapshotInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      snapshotNumber_ = other.snapshotNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TakeSnapshotInput Clone() {
      return new TakeSnapshotInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_number" field.</summary>
    public const int SnapshotNumberFieldNumber = 2;
    private long snapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SnapshotNumber {
      get { return snapshotNumber_; }
      set {
        snapshotNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TakeSnapshotInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TakeSnapshotInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (SnapshotNumber != other.SnapshotNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (SnapshotNumber != 0L) hash ^= SnapshotNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (SnapshotNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteSInt64(SnapshotNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (SnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(SnapshotNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TakeSnapshotInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.SnapshotNumber != 0L) {
        SnapshotNumber = other.SnapshotNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 16: {
            SnapshotNumber = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VotingRecord : pb::IMessage<VotingRecord> {
    private static readonly pb::MessageParser<VotingRecord> _parser = new pb::MessageParser<VotingRecord>(() => new VotingRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecord(VotingRecord other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      snapshotNumber_ = other.snapshotNumber_;
      amount_ = other.amount_;
      withdrawTimestamp_ = other.withdrawTimestamp_ != null ? other.withdrawTimestamp_.Clone() : null;
      voteTimestamp_ = other.voteTimestamp_ != null ? other.voteTimestamp_.Clone() : null;
      isWithdrawn_ = other.isWithdrawn_;
      option_ = other.option_;
      isChangeTarget_ = other.isChangeTarget_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecord Clone() {
      return new VotingRecord(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 2;
    private global::AElf.Types.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_number" field.</summary>
    public const int SnapshotNumberFieldNumber = 3;
    private long snapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SnapshotNumber {
      get { return snapshotNumber_; }
      set {
        snapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "withdraw_timestamp" field.</summary>
    public const int WithdrawTimestampFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp withdrawTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WithdrawTimestamp {
      get { return withdrawTimestamp_; }
      set {
        withdrawTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "vote_timestamp" field.</summary>
    public const int VoteTimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp voteTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VoteTimestamp {
      get { return voteTimestamp_; }
      set {
        voteTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "is_withdrawn" field.</summary>
    public const int IsWithdrawnFieldNumber = 7;
    private bool isWithdrawn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWithdrawn {
      get { return isWithdrawn_; }
      set {
        isWithdrawn_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 8;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_change_target" field.</summary>
    public const int IsChangeTargetFieldNumber = 9;
    private bool isChangeTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChangeTarget {
      get { return isChangeTarget_; }
      set {
        isChangeTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (!object.Equals(Voter, other.Voter)) return false;
      if (SnapshotNumber != other.SnapshotNumber) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(WithdrawTimestamp, other.WithdrawTimestamp)) return false;
      if (!object.Equals(VoteTimestamp, other.VoteTimestamp)) return false;
      if (IsWithdrawn != other.IsWithdrawn) return false;
      if (Option != other.Option) return false;
      if (IsChangeTarget != other.IsChangeTarget) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (SnapshotNumber != 0L) hash ^= SnapshotNumber.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (withdrawTimestamp_ != null) hash ^= WithdrawTimestamp.GetHashCode();
      if (voteTimestamp_ != null) hash ^= VoteTimestamp.GetHashCode();
      if (IsWithdrawn != false) hash ^= IsWithdrawn.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (IsChangeTarget != false) hash ^= IsChangeTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (voter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Voter);
      }
      if (SnapshotNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(SnapshotNumber);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(Amount);
      }
      if (withdrawTimestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsWithdrawn);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Option);
      }
      if (IsChangeTarget != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsChangeTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (SnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(SnapshotNumber);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Amount);
      }
      if (withdrawTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WithdrawTimestamp);
      }
      if (voteTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteTimestamp);
      }
      if (IsWithdrawn != false) {
        size += 1 + 1;
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (IsChangeTarget != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingRecord other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Types.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.SnapshotNumber != 0L) {
        SnapshotNumber = other.SnapshotNumber;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.withdrawTimestamp_ != null) {
        if (withdrawTimestamp_ == null) {
          WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WithdrawTimestamp.MergeFrom(other.WithdrawTimestamp);
      }
      if (other.voteTimestamp_ != null) {
        if (voteTimestamp_ == null) {
          VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VoteTimestamp.MergeFrom(other.VoteTimestamp);
      }
      if (other.IsWithdrawn != false) {
        IsWithdrawn = other.IsWithdrawn;
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      if (other.IsChangeTarget != false) {
        IsChangeTarget = other.IsChangeTarget;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            if (voter_ == null) {
              Voter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 24: {
            SnapshotNumber = input.ReadSInt64();
            break;
          }
          case 32: {
            Amount = input.ReadSInt64();
            break;
          }
          case 42: {
            if (withdrawTimestamp_ == null) {
              WithdrawTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WithdrawTimestamp);
            break;
          }
          case 50: {
            if (voteTimestamp_ == null) {
              VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VoteTimestamp);
            break;
          }
          case 56: {
            IsWithdrawn = input.ReadBool();
            break;
          }
          case 66: {
            Option = input.ReadString();
            break;
          }
          case 72: {
            IsChangeTarget = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AddOptionInput : pb::IMessage<AddOptionInput> {
    private static readonly pb::MessageParser<AddOptionInput> _parser = new pb::MessageParser<AddOptionInput>(() => new AddOptionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddOptionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionInput(AddOptionInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      option_ = other.option_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionInput Clone() {
      return new AddOptionInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 2;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddOptionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddOptionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (Option != other.Option) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Option);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddOptionInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            Option = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RemoveOptionInput : pb::IMessage<RemoveOptionInput> {
    private static readonly pb::MessageParser<RemoveOptionInput> _parser = new pb::MessageParser<RemoveOptionInput>(() => new RemoveOptionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveOptionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionInput(RemoveOptionInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      option_ = other.option_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionInput Clone() {
      return new RemoveOptionInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 2;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveOptionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveOptionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (Option != other.Option) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Option);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveOptionInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            Option = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AddOptionsInput : pb::IMessage<AddOptionsInput> {
    private static readonly pb::MessageParser<AddOptionsInput> _parser = new pb::MessageParser<AddOptionsInput>(() => new AddOptionsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddOptionsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionsInput(AddOptionsInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      options_ = other.options_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOptionsInput Clone() {
      return new AddOptionsInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddOptionsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddOptionsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if(!options_.Equals(other.options_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      hash ^= options_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddOptionsInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      options_.Add(other.options_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RemoveOptionsInput : pb::IMessage<RemoveOptionsInput> {
    private static readonly pb::MessageParser<RemoveOptionsInput> _parser = new pb::MessageParser<RemoveOptionsInput>(() => new RemoveOptionsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveOptionsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionsInput(RemoveOptionsInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      options_ = other.options_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveOptionsInput Clone() {
      return new RemoveOptionsInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveOptionsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveOptionsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if(!options_.Equals(other.options_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      hash ^= options_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveOptionsInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      options_.Add(other.options_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VotedItems : pb::IMessage<VotedItems> {
    private static readonly pb::MessageParser<VotedItems> _parser = new pb::MessageParser<VotedItems>(() => new VotedItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotedItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotedItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotedItems(VotedItems other) : this() {
      votedItemVoteIds_ = other.votedItemVoteIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotedItems Clone() {
      return new VotedItems(this);
    }

    /// <summary>Field number for the "voted_item_vote_ids" field.</summary>
    public const int VotedItemVoteIdsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::AElf.Contracts.Vote.VotedIds>.Codec _map_votedItemVoteIds_codec
        = new pbc::MapField<string, global::AElf.Contracts.Vote.VotedIds>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::AElf.Contracts.Vote.VotedIds.Parser), 10);
    private readonly pbc::MapField<string, global::AElf.Contracts.Vote.VotedIds> votedItemVoteIds_ = new pbc::MapField<string, global::AElf.Contracts.Vote.VotedIds>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::AElf.Contracts.Vote.VotedIds> VotedItemVoteIds {
      get { return votedItemVoteIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotedItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotedItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!VotedItemVoteIds.Equals(other.VotedItemVoteIds)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= VotedItemVoteIds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      votedItemVoteIds_.WriteTo(output, _map_votedItemVoteIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += votedItemVoteIds_.CalculateSize(_map_votedItemVoteIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotedItems other) {
      if (other == null) {
        return;
      }
      votedItemVoteIds_.Add(other.votedItemVoteIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            votedItemVoteIds_.AddEntriesFrom(input, _map_votedItemVoteIds_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VotedIds : pb::IMessage<VotedIds> {
    private static readonly pb::MessageParser<VotedIds> _parser = new pb::MessageParser<VotedIds>(() => new VotedIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotedIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotedIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotedIds(VotedIds other) : this() {
      activeVotes_ = other.activeVotes_.Clone();
      withdrawnVotes_ = other.withdrawnVotes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotedIds Clone() {
      return new VotedIds(this);
    }

    /// <summary>Field number for the "active_votes" field.</summary>
    public const int ActiveVotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_activeVotes_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> activeVotes_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> ActiveVotes {
      get { return activeVotes_; }
    }

    /// <summary>Field number for the "withdrawn_votes" field.</summary>
    public const int WithdrawnVotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_withdrawnVotes_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> withdrawnVotes_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> WithdrawnVotes {
      get { return withdrawnVotes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotedIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotedIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activeVotes_.Equals(other.activeVotes_)) return false;
      if(!withdrawnVotes_.Equals(other.withdrawnVotes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activeVotes_.GetHashCode();
      hash ^= withdrawnVotes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activeVotes_.WriteTo(output, _repeated_activeVotes_codec);
      withdrawnVotes_.WriteTo(output, _repeated_withdrawnVotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activeVotes_.CalculateSize(_repeated_activeVotes_codec);
      size += withdrawnVotes_.CalculateSize(_repeated_withdrawnVotes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotedIds other) {
      if (other == null) {
        return;
      }
      activeVotes_.Add(other.activeVotes_);
      withdrawnVotes_.Add(other.withdrawnVotes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activeVotes_.AddEntriesFrom(input, _repeated_activeVotes_codec);
            break;
          }
          case 18: {
            withdrawnVotes_.AddEntriesFrom(input, _repeated_withdrawnVotes_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetVotingIdsInput : pb::IMessage<GetVotingIdsInput> {
    private static readonly pb::MessageParser<GetVotingIdsInput> _parser = new pb::MessageParser<GetVotingIdsInput>(() => new GetVotingIdsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingIdsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingIdsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingIdsInput(GetVotingIdsInput other) : this() {
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingIdsInput Clone() {
      return new GetVotingIdsInput(this);
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 1;
    private global::AElf.Types.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 2;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingIdsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingIdsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Voter, other.Voter)) return false;
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Voter);
      }
      if (votingItemId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VotingItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingIdsInput other) {
      if (other == null) {
        return;
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Types.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voter_ == null) {
              Voter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 18: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetVotingItemInput : pb::IMessage<GetVotingItemInput> {
    private static readonly pb::MessageParser<GetVotingItemInput> _parser = new pb::MessageParser<GetVotingItemInput>(() => new GetVotingItemInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingItemInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingItemInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingItemInput(GetVotingItemInput other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingItemInput Clone() {
      return new GetVotingItemInput(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingItemInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingItemInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingItemInput other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetVotingRecordsInput : pb::IMessage<GetVotingRecordsInput> {
    private static readonly pb::MessageParser<GetVotingRecordsInput> _parser = new pb::MessageParser<GetVotingRecordsInput>(() => new GetVotingRecordsInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVotingRecordsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsInput(GetVotingRecordsInput other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVotingRecordsInput Clone() {
      return new GetVotingRecordsInput(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_ids_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> ids_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Hash> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVotingRecordsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVotingRecordsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVotingRecordsInput other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VotingRecords : pb::IMessage<VotingRecords> {
    private static readonly pb::MessageParser<VotingRecords> _parser = new pb::MessageParser<VotingRecords>(() => new VotingRecords());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingRecords> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecords() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecords(VotingRecords other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingRecords Clone() {
      return new VotingRecords(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Contracts.Vote.VotingRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Contracts.Vote.VotingRecord.Parser);
    private readonly pbc::RepeatedField<global::AElf.Contracts.Vote.VotingRecord> records_ = new pbc::RepeatedField<global::AElf.Contracts.Vote.VotingRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Contracts.Vote.VotingRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingRecords);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingRecords other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingRecords other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Events
  /// </summary>
  internal sealed partial class Voted : pb::IMessage<Voted> {
    private static readonly pb::MessageParser<Voted> _parser = new pb::MessageParser<Voted>(() => new Voted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Voted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Voted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Voted(Voted other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      voter_ = other.voter_ != null ? other.voter_.Clone() : null;
      snapshotNumber_ = other.snapshotNumber_;
      amount_ = other.amount_;
      voteTimestamp_ = other.voteTimestamp_ != null ? other.voteTimestamp_.Clone() : null;
      option_ = other.option_;
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Voted Clone() {
      return new Voted(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "voter" field.</summary>
    public const int VoterFieldNumber = 2;
    private global::AElf.Types.Address voter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Voter {
      get { return voter_; }
      set {
        voter_ = value;
      }
    }

    /// <summary>Field number for the "snapshot_number" field.</summary>
    public const int SnapshotNumberFieldNumber = 3;
    private long snapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SnapshotNumber {
      get { return snapshotNumber_; }
      set {
        snapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "vote_timestamp" field.</summary>
    public const int VoteTimestampFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp voteTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VoteTimestamp {
      get { return voteTimestamp_; }
      set {
        voteTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 6;
    private string option_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Option {
      get { return option_; }
      set {
        option_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 7;
    private global::AElf.Types.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Voted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Voted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (!object.Equals(Voter, other.Voter)) return false;
      if (SnapshotNumber != other.SnapshotNumber) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(VoteTimestamp, other.VoteTimestamp)) return false;
      if (Option != other.Option) return false;
      if (!object.Equals(VoteId, other.VoteId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (voter_ != null) hash ^= Voter.GetHashCode();
      if (SnapshotNumber != 0L) hash ^= SnapshotNumber.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (voteTimestamp_ != null) hash ^= VoteTimestamp.GetHashCode();
      if (Option.Length != 0) hash ^= Option.GetHashCode();
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (voter_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Voter);
      }
      if (SnapshotNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(SnapshotNumber);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(Amount);
      }
      if (voteTimestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VoteTimestamp);
      }
      if (Option.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Option);
      }
      if (voteId_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(VoteId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (voter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voter);
      }
      if (SnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(SnapshotNumber);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Amount);
      }
      if (voteTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteTimestamp);
      }
      if (Option.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Option);
      }
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Voted other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.voter_ != null) {
        if (voter_ == null) {
          Voter = new global::AElf.Types.Address();
        }
        Voter.MergeFrom(other.Voter);
      }
      if (other.SnapshotNumber != 0L) {
        SnapshotNumber = other.SnapshotNumber;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.voteTimestamp_ != null) {
        if (voteTimestamp_ == null) {
          VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VoteTimestamp.MergeFrom(other.VoteTimestamp);
      }
      if (other.Option.Length != 0) {
        Option = other.Option;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Types.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            if (voter_ == null) {
              Voter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Voter);
            break;
          }
          case 24: {
            SnapshotNumber = input.ReadSInt64();
            break;
          }
          case 32: {
            Amount = input.ReadSInt64();
            break;
          }
          case 42: {
            if (voteTimestamp_ == null) {
              VoteTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VoteTimestamp);
            break;
          }
          case 50: {
            Option = input.ReadString();
            break;
          }
          case 58: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Withdrawn : pb::IMessage<Withdrawn> {
    private static readonly pb::MessageParser<Withdrawn> _parser = new pb::MessageParser<Withdrawn>(() => new Withdrawn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Withdrawn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Withdrawn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Withdrawn(Withdrawn other) : this() {
      voteId_ = other.voteId_ != null ? other.voteId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Withdrawn Clone() {
      return new Withdrawn(this);
    }

    /// <summary>Field number for the "vote_id" field.</summary>
    public const int VoteIdFieldNumber = 1;
    private global::AElf.Types.Hash voteId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoteId {
      get { return voteId_; }
      set {
        voteId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Withdrawn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Withdrawn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoteId, other.VoteId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voteId_ != null) hash ^= VoteId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voteId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoteId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voteId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoteId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Withdrawn other) {
      if (other == null) {
        return;
      }
      if (other.voteId_ != null) {
        if (voteId_ == null) {
          VoteId = new global::AElf.Types.Hash();
        }
        VoteId.MergeFrom(other.VoteId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voteId_ == null) {
              VoteId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoteId);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class VotingItemRegistered : pb::IMessage<VotingItemRegistered> {
    private static readonly pb::MessageParser<VotingItemRegistered> _parser = new pb::MessageParser<VotingItemRegistered>(() => new VotingItemRegistered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VotingItemRegistered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Vote.VoteContractReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingItemRegistered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingItemRegistered(VotingItemRegistered other) : this() {
      votingItemId_ = other.votingItemId_ != null ? other.votingItemId_.Clone() : null;
      acceptedCurrency_ = other.acceptedCurrency_;
      isLockToken_ = other.isLockToken_;
      currentSnapshotNumber_ = other.currentSnapshotNumber_;
      totalSnapshotNumber_ = other.totalSnapshotNumber_;
      registerTimestamp_ = other.registerTimestamp_ != null ? other.registerTimestamp_.Clone() : null;
      startTimestamp_ = other.startTimestamp_ != null ? other.startTimestamp_.Clone() : null;
      endTimestamp_ = other.endTimestamp_ != null ? other.endTimestamp_.Clone() : null;
      currentSnapshotStartTimestamp_ = other.currentSnapshotStartTimestamp_ != null ? other.currentSnapshotStartTimestamp_.Clone() : null;
      sponsor_ = other.sponsor_ != null ? other.sponsor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VotingItemRegistered Clone() {
      return new VotingItemRegistered(this);
    }

    /// <summary>Field number for the "voting_item_id" field.</summary>
    public const int VotingItemIdFieldNumber = 1;
    private global::AElf.Types.Hash votingItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VotingItemId {
      get { return votingItemId_; }
      set {
        votingItemId_ = value;
      }
    }

    /// <summary>Field number for the "accepted_currency" field.</summary>
    public const int AcceptedCurrencyFieldNumber = 2;
    private string acceptedCurrency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceptedCurrency {
      get { return acceptedCurrency_; }
      set {
        acceptedCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_lock_token" field.</summary>
    public const int IsLockTokenFieldNumber = 3;
    private bool isLockToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLockToken {
      get { return isLockToken_; }
      set {
        isLockToken_ = value;
      }
    }

    /// <summary>Field number for the "current_snapshot_number" field.</summary>
    public const int CurrentSnapshotNumberFieldNumber = 4;
    private long currentSnapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentSnapshotNumber {
      get { return currentSnapshotNumber_; }
      set {
        currentSnapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "total_snapshot_number" field.</summary>
    public const int TotalSnapshotNumberFieldNumber = 5;
    private long totalSnapshotNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSnapshotNumber {
      get { return totalSnapshotNumber_; }
      set {
        totalSnapshotNumber_ = value;
      }
    }

    /// <summary>Field number for the "register_timestamp" field.</summary>
    public const int RegisterTimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp registerTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RegisterTimestamp {
      get { return registerTimestamp_; }
      set {
        registerTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp" field.</summary>
    public const int EndTimestampFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTimestamp {
      get { return endTimestamp_; }
      set {
        endTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "current_snapshot_start_timestamp" field.</summary>
    public const int CurrentSnapshotStartTimestampFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentSnapshotStartTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentSnapshotStartTimestamp {
      get { return currentSnapshotStartTimestamp_; }
      set {
        currentSnapshotStartTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "sponsor" field.</summary>
    public const int SponsorFieldNumber = 10;
    private global::AElf.Types.Address sponsor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Sponsor {
      get { return sponsor_; }
      set {
        sponsor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VotingItemRegistered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VotingItemRegistered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VotingItemId, other.VotingItemId)) return false;
      if (AcceptedCurrency != other.AcceptedCurrency) return false;
      if (IsLockToken != other.IsLockToken) return false;
      if (CurrentSnapshotNumber != other.CurrentSnapshotNumber) return false;
      if (TotalSnapshotNumber != other.TotalSnapshotNumber) return false;
      if (!object.Equals(RegisterTimestamp, other.RegisterTimestamp)) return false;
      if (!object.Equals(StartTimestamp, other.StartTimestamp)) return false;
      if (!object.Equals(EndTimestamp, other.EndTimestamp)) return false;
      if (!object.Equals(CurrentSnapshotStartTimestamp, other.CurrentSnapshotStartTimestamp)) return false;
      if (!object.Equals(Sponsor, other.Sponsor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (votingItemId_ != null) hash ^= VotingItemId.GetHashCode();
      if (AcceptedCurrency.Length != 0) hash ^= AcceptedCurrency.GetHashCode();
      if (IsLockToken != false) hash ^= IsLockToken.GetHashCode();
      if (CurrentSnapshotNumber != 0L) hash ^= CurrentSnapshotNumber.GetHashCode();
      if (TotalSnapshotNumber != 0L) hash ^= TotalSnapshotNumber.GetHashCode();
      if (registerTimestamp_ != null) hash ^= RegisterTimestamp.GetHashCode();
      if (startTimestamp_ != null) hash ^= StartTimestamp.GetHashCode();
      if (endTimestamp_ != null) hash ^= EndTimestamp.GetHashCode();
      if (currentSnapshotStartTimestamp_ != null) hash ^= CurrentSnapshotStartTimestamp.GetHashCode();
      if (sponsor_ != null) hash ^= Sponsor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (votingItemId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VotingItemId);
      }
      if (AcceptedCurrency.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AcceptedCurrency);
      }
      if (IsLockToken != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsLockToken);
      }
      if (CurrentSnapshotNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteSInt64(CurrentSnapshotNumber);
      }
      if (TotalSnapshotNumber != 0L) {
        output.WriteRawTag(40);
        output.WriteSInt64(TotalSnapshotNumber);
      }
      if (registerTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RegisterTimestamp);
      }
      if (startTimestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTimestamp);
      }
      if (currentSnapshotStartTimestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CurrentSnapshotStartTimestamp);
      }
      if (sponsor_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Sponsor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (votingItemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VotingItemId);
      }
      if (AcceptedCurrency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceptedCurrency);
      }
      if (IsLockToken != false) {
        size += 1 + 1;
      }
      if (CurrentSnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(CurrentSnapshotNumber);
      }
      if (TotalSnapshotNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TotalSnapshotNumber);
      }
      if (registerTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterTimestamp);
      }
      if (startTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimestamp);
      }
      if (endTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimestamp);
      }
      if (currentSnapshotStartTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentSnapshotStartTimestamp);
      }
      if (sponsor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sponsor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VotingItemRegistered other) {
      if (other == null) {
        return;
      }
      if (other.votingItemId_ != null) {
        if (votingItemId_ == null) {
          VotingItemId = new global::AElf.Types.Hash();
        }
        VotingItemId.MergeFrom(other.VotingItemId);
      }
      if (other.AcceptedCurrency.Length != 0) {
        AcceptedCurrency = other.AcceptedCurrency;
      }
      if (other.IsLockToken != false) {
        IsLockToken = other.IsLockToken;
      }
      if (other.CurrentSnapshotNumber != 0L) {
        CurrentSnapshotNumber = other.CurrentSnapshotNumber;
      }
      if (other.TotalSnapshotNumber != 0L) {
        TotalSnapshotNumber = other.TotalSnapshotNumber;
      }
      if (other.registerTimestamp_ != null) {
        if (registerTimestamp_ == null) {
          RegisterTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RegisterTimestamp.MergeFrom(other.RegisterTimestamp);
      }
      if (other.startTimestamp_ != null) {
        if (startTimestamp_ == null) {
          StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimestamp.MergeFrom(other.StartTimestamp);
      }
      if (other.endTimestamp_ != null) {
        if (endTimestamp_ == null) {
          EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTimestamp.MergeFrom(other.EndTimestamp);
      }
      if (other.currentSnapshotStartTimestamp_ != null) {
        if (currentSnapshotStartTimestamp_ == null) {
          CurrentSnapshotStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentSnapshotStartTimestamp.MergeFrom(other.CurrentSnapshotStartTimestamp);
      }
      if (other.sponsor_ != null) {
        if (sponsor_ == null) {
          Sponsor = new global::AElf.Types.Address();
        }
        Sponsor.MergeFrom(other.Sponsor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (votingItemId_ == null) {
              VotingItemId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VotingItemId);
            break;
          }
          case 18: {
            AcceptedCurrency = input.ReadString();
            break;
          }
          case 24: {
            IsLockToken = input.ReadBool();
            break;
          }
          case 32: {
            CurrentSnapshotNumber = input.ReadSInt64();
            break;
          }
          case 40: {
            TotalSnapshotNumber = input.ReadSInt64();
            break;
          }
          case 50: {
            if (registerTimestamp_ == null) {
              RegisterTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RegisterTimestamp);
            break;
          }
          case 58: {
            if (startTimestamp_ == null) {
              StartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimestamp);
            break;
          }
          case 66: {
            if (endTimestamp_ == null) {
              EndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTimestamp);
            break;
          }
          case 74: {
            if (currentSnapshotStartTimestamp_ == null) {
              CurrentSnapshotStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentSnapshotStartTimestamp);
            break;
          }
          case 82: {
            if (sponsor_ == null) {
              Sponsor = new global::AElf.Types.Address();
            }
            input.ReadMessage(Sponsor);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
